/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as FernDefinition from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { CasingOverridesSchema } from "./CasingOverridesSchema.js";
import { WithDocsSchema } from "../../commons/types/WithDocsSchema.js";
import { WithName } from "../../commons/types/WithName.js";

export const EnumValueSchema: core.serialization.ObjectSchema<
    serializers.EnumValueSchema.Raw,
    FernDefinition.EnumValueSchema
> = core.serialization
    .object({
        value: core.serialization.string(),
        casing: CasingOverridesSchema.optional(),
    })
    .extend(WithDocsSchema)
    .extend(WithName);

export declare namespace EnumValueSchema {
    export interface Raw extends WithDocsSchema.Raw, WithName.Raw {
        value: string;
        casing?: CasingOverridesSchema.Raw | null;
    }
}
