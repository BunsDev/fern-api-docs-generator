/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as FernDefinition from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { ErrorDiscriminationSchema } from "./ErrorDiscriminationSchema.js";
import { HttpPathParameterSchema } from "../../service/types/HttpPathParameterSchema.js";
import { HttpHeaderSchema } from "../../service/types/HttpHeaderSchema.js";
import { VariableDeclarationSchema } from "../../variables/types/VariableDeclarationSchema.js";
import { PaginationSchema } from "../../pagination/types/PaginationSchema.js";
import { ProductDeclarationSchema } from "../../products/types/ProductDeclarationSchema.js";
import { VersionDeclarationSchema } from "../../versioning/types/VersionDeclarationSchema.js";
import { WithDocsSchema } from "../../commons/types/WithDocsSchema.js";
import { WithDisplayName } from "../../commons/types/WithDisplayName.js";
import { WithEnvironmentsSchema } from "../../environments/types/WithEnvironmentsSchema.js";
import { WithAuthSchema } from "../../auth/types/WithAuthSchema.js";
import { WithHeadersSchema } from "./WithHeadersSchema.js";

export const RootApiFileSchema: core.serialization.ObjectSchema<
    serializers.RootApiFileSchema.Raw,
    FernDefinition.RootApiFileSchema
> = core.serialization
    .object({
        name: core.serialization.string(),
        imports: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        "error-discrimination": ErrorDiscriminationSchema.optional(),
        audiences: core.serialization.list(core.serialization.string()).optional(),
        errors: core.serialization.list(core.serialization.string()).optional(),
        "base-path": core.serialization.string().optional(),
        "path-parameters": core.serialization.record(core.serialization.string(), HttpPathParameterSchema).optional(),
        "idempotency-headers": core.serialization.record(core.serialization.string(), HttpHeaderSchema).optional(),
        variables: core.serialization.record(core.serialization.string(), VariableDeclarationSchema).optional(),
        pagination: PaginationSchema.optional(),
        product: ProductDeclarationSchema.optional(),
        version: VersionDeclarationSchema.optional(),
    })
    .extend(WithDocsSchema)
    .extend(WithDisplayName)
    .extend(WithEnvironmentsSchema)
    .extend(WithAuthSchema)
    .extend(WithHeadersSchema);

export declare namespace RootApiFileSchema {
    export interface Raw
        extends WithDocsSchema.Raw,
            WithDisplayName.Raw,
            WithEnvironmentsSchema.Raw,
            WithAuthSchema.Raw,
            WithHeadersSchema.Raw {
        name: string;
        imports?: Record<string, string> | null;
        "error-discrimination"?: ErrorDiscriminationSchema.Raw | null;
        audiences?: string[] | null;
        errors?: string[] | null;
        "base-path"?: string | null;
        "path-parameters"?: Record<string, HttpPathParameterSchema.Raw> | null;
        "idempotency-headers"?: Record<string, HttpHeaderSchema.Raw> | null;
        variables?: Record<string, VariableDeclarationSchema.Raw> | null;
        pagination?: PaginationSchema.Raw | null;
        product?: ProductDeclarationSchema.Raw | null;
        version?: VersionDeclarationSchema.Raw | null;
    }
}
