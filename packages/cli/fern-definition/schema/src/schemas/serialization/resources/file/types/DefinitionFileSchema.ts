/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as FernDefinition from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { TypeDeclarationSchema } from "../../types/types/TypeDeclarationSchema.js";
import { HttpServiceSchema } from "../../service/types/HttpServiceSchema.js";
import { ErrorDeclarationSchema } from "../../errors/types/ErrorDeclarationSchema.js";
import { WebhookSchema } from "../../webhooks/types/WebhookSchema.js";
import { WebSocketChannelSchema } from "../../websocket/types/WebSocketChannelSchema.js";
import { WithDocsSchema } from "../../commons/types/WithDocsSchema.js";

export const DefinitionFileSchema: core.serialization.ObjectSchema<
    serializers.DefinitionFileSchema.Raw,
    FernDefinition.DefinitionFileSchema
> = core.serialization
    .object({
        imports: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        types: core.serialization.record(core.serialization.string(), TypeDeclarationSchema).optional(),
        service: HttpServiceSchema.optional(),
        errors: core.serialization.record(core.serialization.string(), ErrorDeclarationSchema).optional(),
        webhooks: core.serialization.record(core.serialization.string(), WebhookSchema).optional(),
        channel: WebSocketChannelSchema.optional(),
    })
    .extend(WithDocsSchema);

export declare namespace DefinitionFileSchema {
    export interface Raw extends WithDocsSchema.Raw {
        imports?: Record<string, string> | null;
        types?: Record<string, TypeDeclarationSchema.Raw> | null;
        service?: HttpServiceSchema.Raw | null;
        errors?: Record<string, ErrorDeclarationSchema.Raw> | null;
        webhooks?: Record<string, WebhookSchema.Raw> | null;
        channel?: WebSocketChannelSchema.Raw | null;
    }
}
