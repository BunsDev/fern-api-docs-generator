/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as FernDefinition from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { HttpHeaderSchema } from "../../service/types/HttpHeaderSchema.js";
import { HttpPathParameterSchema } from "../../service/types/HttpPathParameterSchema.js";
import { HttpQueryParameterSchema } from "../../service/types/HttpQueryParameterSchema.js";
import { WebSocketChannelMessageSchema } from "./WebSocketChannelMessageSchema.js";
import { ExampleWebSocketSession } from "../../examples/types/ExampleWebSocketSession.js";
import { DeclarationSchema } from "../../commons/types/DeclarationSchema.js";
import { WithDisplayName } from "../../commons/types/WithDisplayName.js";

export const WebSocketChannelSchema: core.serialization.ObjectSchema<
    serializers.WebSocketChannelSchema.Raw,
    FernDefinition.WebSocketChannelSchema
> = core.serialization
    .object({
        auth: core.serialization.boolean(),
        url: core.serialization.string().optional(),
        path: core.serialization.string(),
        headers: core.serialization.record(core.serialization.string(), HttpHeaderSchema).optional(),
        "path-parameters": core.serialization.record(core.serialization.string(), HttpPathParameterSchema).optional(),
        "query-parameters": core.serialization.record(core.serialization.string(), HttpQueryParameterSchema).optional(),
        messages: core.serialization.record(core.serialization.string(), WebSocketChannelMessageSchema).optional(),
        examples: core.serialization.list(ExampleWebSocketSession).optional(),
    })
    .extend(DeclarationSchema)
    .extend(WithDisplayName);

export declare namespace WebSocketChannelSchema {
    export interface Raw extends DeclarationSchema.Raw, WithDisplayName.Raw {
        auth: boolean;
        url?: string | null;
        path: string;
        headers?: Record<string, HttpHeaderSchema.Raw> | null;
        "path-parameters"?: Record<string, HttpPathParameterSchema.Raw> | null;
        "query-parameters"?: Record<string, HttpQueryParameterSchema.Raw> | null;
        messages?: Record<string, WebSocketChannelMessageSchema.Raw> | null;
        examples?: ExampleWebSocketSession.Raw[] | null;
    }
}
