/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as FernOpenapiIr from "../../../../api";
import * as core from "../../../../core";

export const AuthorizationCodeOAuthScheme: core.serialization.ObjectSchema<
    serializers.AuthorizationCodeOAuthScheme.Raw,
    FernOpenapiIr.AuthorizationCodeOAuthScheme
> = core.serialization
    .objectWithoutOptionalProperties({
        authorizationCodeEnvVar: core.serialization.string().optional(),
        tokenEndpoint: core.serialization.lazyObject(async () => (await import("../../..")).OAuthTokenEndpoint),
        authorizationEndpoint: core.serialization.lazyObject(
            async () => (await import("../../..")).OAuthAuthorizationEndpoint
        ),
        refreshEndpoint: core.serialization
            .lazyObject(async () => (await import("../../..")).OAuthRefreshTokenEndpoint)
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).BaseOauthSecurityScheme));

export declare namespace AuthorizationCodeOAuthScheme {
    interface Raw extends serializers.BaseOauthSecurityScheme.Raw {
        authorizationCodeEnvVar?: string | null;
        tokenEndpoint: serializers.OAuthTokenEndpoint.Raw;
        authorizationEndpoint: serializers.OAuthAuthorizationEndpoint.Raw;
        refreshEndpoint?: serializers.OAuthRefreshTokenEndpoint.Raw | null;
    }
}
