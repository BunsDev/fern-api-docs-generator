# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  types: types.yml
  commons: commons.yml
types:
  EnvironmentVariable: string
  ApiAuth:
    extends: commons.WithDocs
    properties:
      requirement: AuthSchemesRequirement
      schemes: list<AuthScheme>
  AuthSchemesRequirement:
    enum:
      - ALL
      - ANY
  AuthScheme:
    discriminant:
      value: _type
      name: type
    union:
      bearer: BearerAuthScheme
      basic: BasicAuthScheme
      header: HeaderAuthScheme
      oauth: OAuthScheme
  BearerAuthScheme:
    extends: commons.WithDocs
    properties:
      token: commons.Name
      tokenEnvVar:
        type: optional<EnvironmentVariable>
        docs: The environment variable the SDK should use to read the token.
  OAuthScheme:
    extends: commons.WithDocs
    docs: Note that for the oauth scheme we are currently assuming the resultant token is leveraged as a bearer token, e.g. "Authorization Bearer
    properties:
      configuration: OAuthConfiguration
  OAuthConfiguration:
    union:
      authorizationCode: AuthorizationCodeOAuthScheme
      clientCredentials: ClientCredentialsOAuthScheme
      implicit: ImplicitOAuthScheme
      password: PasswordOAuthScheme
  ClientCredentialsOAuthScheme:
    extends: BaseOAuthScheme
    properties:
      tokenEndpoint:
        type: string
        docs: |
          The refrence to the access token endpoint. This is specifically the endpoint ID without the `endpoint_` prefix.
          This is gotten by following the path to the file the endpoint is defined in, so if the endpoint `get_token` is defined in foo/service.yml,
          the endpoint ID would be `foo/service.get_token`.
      refreshEndpoint:
        type: optional<string>
        docs: |
          The refrence to the refresh token endpoint. This is specifically the endpoint ID without the `endpoint_` prefix.
          This is gotten by following the path to the file the endpoint is defined in, so if the endpoint `refresh_token` is defined in foo/service.yml,
          the endpoint ID would be `foo/service.refresh_token`.
  AuthorizationCodeOAuthScheme:
    extends: BaseOAuthScheme
    properties:
      authorizationCodeEnvVar: optional<EnvironmentVariable>
      authorizationEndpoint:
        type: string
        docs: |
          The refrence to the authorization endpoint. This is specifically the endpoint ID without the `endpoint_` prefix.
          This is gotten by following the path to the file the endpoint is defined in, so if the endpoint `authorize` is defined in foo/service.yml,
          the endpoint ID would be `foo/service.authorize`.
      tokenEndpoint: string
      refreshEndpoint: optional<string>
  ImplicitOAuthScheme:
    extends: BaseOAuthScheme
    properties:
      authorizationCodeEnvVar: optional<EnvironmentVariable>
      authorizationEndpoint: string
      refreshEndpoint: optional<string>
  PasswordOAuthScheme:
    extends: BaseOAuthScheme
    properties:
      tokenEndpoint: string
      refreshEndpoint: optional<string>
  BaseOAuthScheme:
    properties:
      clientIdEnvVar: optional<EnvironmentVariable>
      clientSecretEnvVar: optional<EnvironmentVariable>
      tokenPrefix: optional<string>
      scopes: optional<list<string>>
      redirectUri: optional<string>

  BasicAuthScheme:
    extends: commons.WithDocs
    properties:
      username: commons.Name
      usernameEnvVar:
        type: optional<EnvironmentVariable>
        docs: The environment variable the SDK should use to read the username.
      password: commons.Name
      passwordEnvVar:
        type: optional<EnvironmentVariable>
        docs: The environment variable the SDK should use to read the password.
  HeaderAuthScheme:
    extends: commons.WithDocs
    properties:
      name: commons.NameAndWireValue
      valueType: types.TypeReference
      prefix: optional<string>
      headerEnvVar:
        type: optional<EnvironmentVariable>
        docs: The environment variable the SDK should use to read the header.
