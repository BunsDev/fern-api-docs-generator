/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../..";

export type OAuthConfiguration =
    | FernIr.OAuthConfiguration.AuthorizationCode
    | FernIr.OAuthConfiguration.ClientCredentials
    | FernIr.OAuthConfiguration.Implicit
    | FernIr.OAuthConfiguration.Password;

export declare namespace OAuthConfiguration {
    interface AuthorizationCode extends FernIr.AuthorizationCodeOAuthScheme, _Utils {
        type: "authorizationCode";
    }

    interface ClientCredentials extends FernIr.ClientCredentialsOAuthScheme, _Utils {
        type: "clientCredentials";
    }

    interface Implicit extends FernIr.ImplicitOAuthScheme, _Utils {
        type: "implicit";
    }

    interface Password extends FernIr.PasswordOAuthScheme, _Utils {
        type: "password";
    }

    interface _Utils {
        _visit: <_Result>(visitor: FernIr.OAuthConfiguration._Visitor<_Result>) => _Result;
    }

    interface _Visitor<_Result> {
        authorizationCode: (value: FernIr.AuthorizationCodeOAuthScheme) => _Result;
        clientCredentials: (value: FernIr.ClientCredentialsOAuthScheme) => _Result;
        implicit: (value: FernIr.ImplicitOAuthScheme) => _Result;
        password: (value: FernIr.PasswordOAuthScheme) => _Result;
        _other: (value: { type: string }) => _Result;
    }
}

export const OAuthConfiguration = {
    authorizationCode: (value: FernIr.AuthorizationCodeOAuthScheme): FernIr.OAuthConfiguration.AuthorizationCode => {
        return {
            ...value,
            type: "authorizationCode",
            _visit: function <_Result>(
                this: FernIr.OAuthConfiguration.AuthorizationCode,
                visitor: FernIr.OAuthConfiguration._Visitor<_Result>
            ) {
                return FernIr.OAuthConfiguration._visit(this, visitor);
            },
        };
    },

    clientCredentials: (value: FernIr.ClientCredentialsOAuthScheme): FernIr.OAuthConfiguration.ClientCredentials => {
        return {
            ...value,
            type: "clientCredentials",
            _visit: function <_Result>(
                this: FernIr.OAuthConfiguration.ClientCredentials,
                visitor: FernIr.OAuthConfiguration._Visitor<_Result>
            ) {
                return FernIr.OAuthConfiguration._visit(this, visitor);
            },
        };
    },

    implicit: (value: FernIr.ImplicitOAuthScheme): FernIr.OAuthConfiguration.Implicit => {
        return {
            ...value,
            type: "implicit",
            _visit: function <_Result>(
                this: FernIr.OAuthConfiguration.Implicit,
                visitor: FernIr.OAuthConfiguration._Visitor<_Result>
            ) {
                return FernIr.OAuthConfiguration._visit(this, visitor);
            },
        };
    },

    password: (value: FernIr.PasswordOAuthScheme): FernIr.OAuthConfiguration.Password => {
        return {
            ...value,
            type: "password",
            _visit: function <_Result>(
                this: FernIr.OAuthConfiguration.Password,
                visitor: FernIr.OAuthConfiguration._Visitor<_Result>
            ) {
                return FernIr.OAuthConfiguration._visit(this, visitor);
            },
        };
    },

    _visit: <_Result>(
        value: FernIr.OAuthConfiguration,
        visitor: FernIr.OAuthConfiguration._Visitor<_Result>
    ): _Result => {
        switch (value.type) {
            case "authorizationCode":
                return visitor.authorizationCode(value);
            case "clientCredentials":
                return visitor.clientCredentials(value);
            case "implicit":
                return visitor.implicit(value);
            case "password":
                return visitor.password(value);
            default:
                return visitor._other(value as any);
        }
    },
} as const;
