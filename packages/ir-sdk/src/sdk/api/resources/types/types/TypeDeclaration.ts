/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as FernIr from "../../../index";

/**
 * A type, which is a name and a shape
 */
export interface TypeDeclaration extends FernIr.Declaration {
    name: FernIr.DeclaredTypeName;
    shape: FernIr.Type;
    autogeneratedExamples: FernIr.ExampleType[];
    userProvidedExamples: FernIr.ExampleType[];
    /** If the type is involved in a true cycle, e.g. not just through referencing itself. */
    isInvolvedInCycle: boolean | undefined;
    /**
     * All other named types that this type references (directly or indirectly), not including itself.
     * To know if the object is involved in a cycle, use the `isInvolvedInCycle` field.
     */
    referencedTypesWithoutSelf: Set<FernIr.TypeId> | undefined;
    /** All other named types that this type references (directly or indirectly) */
    referencedTypes: Set<FernIr.TypeId>;
    encoding: FernIr.Encoding | undefined;
    source: FernIr.Source | undefined;
}
