# TODO: It'd be great if we generated YAML schemas so people had validation on these files
- generatorId: python-sdk
  irVersion: 53
  version: 3.10.6
  changelogEntry:
    type: fix
    fixed:
      - >-
        Cursor-based pagination also assumes `""` is a terminal signal for
        pagination, same as if the next cursor were `None`.
  # This field is optional and can be omitted outside of the backfilling usecase
  # here it will default to the day the record was written to the DB
  createdAt: '2024-08-16'
- generatorId: python-sdk
  irVersion: 53
  version: 3.10.4
  createdAt: '2024-08-14'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: `.dict` performance is increased, consolidating to a single
        call to Pydantic's `.dict` instead of 2 in attempts to remove unset
        optional values.
- generatorId: python-sdk
  irVersion: 53
  version: 3.10.3
  createdAt: '2024-08-14'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Query encoding now appropriately takes arrays of deep objects into
        account.
- generatorId: python-sdk
  irVersion: 53
  version: 3.10.2
  createdAt: '2024-08-13'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Unions with utils now update forward refs again, a regression that was
        introduced in version 3.7.0
- generatorId: python-sdk
  irVersion: 53
  version: 3.10.1
  createdAt: '2024-08-13'
  changelogEntry:
    type: fix
    fixed:
      - >-
        If there are no autogenerated examples present, the Python SDK generator
        no longer fails.
- generatorId: python-sdk
  irVersion: 53
  version: 3.10.0
  createdAt: '2024-08-09'
  changelogEntry:
    type: feat
    added:
      - >-
        Adds a new flag to generate forward compatible Python enums, as opposed
        to leveraging raw string enums as literals. This works through addding
        an "_UNKNOWN" member to your enum set, the value of which is the raw
        value of the unrecognized enum.
- generatorId: python-sdk
  irVersion: 53
  version: 3.9.0
  createdAt: '2024-08-09'
  changelogEntry:
    type: feat
    added:
      - >-
        A new configuration is introduced to make discriminated union member
        naming more Pythonic. With V1 union naming, member names change from
        `<UnionName>_<DiscriminantValue>` to `<DiscriminantValue><UnionName>`.
        Concretely, union members previously named `Chat_User` will now be named
        `UserChat` under the new configuration.
- generatorId: python-sdk
  irVersion: 53
  version: 3.8.0
  createdAt: '2024-08-09'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: generated SDKs now use ruff for linting and formatting,
        instead of Black.
- generatorId: python-sdk
  irVersion: 53
  version: 3.7.0
  createdAt: '2024-08-08'
  changelogEntry:
    type: chore
    changed:
      - 'Improvement: Python circular referencing types are more robust.'
- generatorId: python-sdk
  irVersion: 53
  version: 3.6.0
  createdAt: '2024-08-08'
  changelogEntry:
    type: feat
    added:
      - >-
        The generator now respects returning nested properties, these can be
        specified via:
- generatorId: python-sdk
  irVersion: 53
  version: 3.5.1
  createdAt: '2024-08-05'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The root type for unions with visitors now has it's parent typed
        correctly. This allows auto-complete to work once again on the union
        when it's nested within other pydantic models.
- generatorId: python-sdk
  irVersion: 53
  version: 3.5.0
  createdAt: '2024-08-05'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The generated SDK now respects the pydantic version flag,
        generating V1 only code and V2 only code if specified. If not, the SDK
        is generated as it is today, with compatibility for BOTH Pydantic
        versions. This cleans up the generated code, and brings back features
        liked wrapped aliases for V1-only SDKs.
- generatorId: python-sdk
  irVersion: 53
  version: 3.4.2
  createdAt: '2024-08-05'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The Python generator now instantiates `Any` types as `Optional[Any]` to
        be able to meet some breaks in Pydantic V2.
- generatorId: python-sdk
  irVersion: 53
  version: 3.4.1
  createdAt: '2024-08-04'
  changelogEntry:
    type: fix
    fixed:
      - Literal templates are generated if they are union members
- generatorId: python-sdk
  irVersion: 53
  version: 3.4.0
  createdAt: '2024-08-02'
  changelogEntry:
    type: chore
    changed:
      - >-
        Internal: The SDK generator has now been upgraded to use Pydantic V2
        internally. Note that there is no change to the generated code, however
        by leveraging Pydantic V2 you should notice an improvement in `fern
        generate` times.
- generatorId: python-sdk
  irVersion: 53
  version: 3.3.4
  createdAt: '2024-08-02'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Aliased literals are also defaulted within Pydantic models,
        whereas previously only direct literals were defaulted.
      - >-
        Improvement: Snippets now provide optional literals in functions and
        models.
    fixed:
      - >-
        Generated tests that expect an empty result when they are of type `text`
        (not JSON) now appropriately expect an empty string instead of `None`.
- generatorId: python-sdk
  irVersion: 53
  version: 3.3.3
  createdAt: '2024-08-02'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generator now allows you to extend aliased types (as long as they're
        objects).
- generatorId: python-sdk
  irVersion: 53
  version: 3.3.2
  createdAt: '2024-08-02'
  changelogEntry:
    type: fix
    fixed:
      - regression in readme generation introduced in 3.3.1
- generatorId: python-sdk
  irVersion: 53
  version: 3.3.1
  createdAt: '2024-08-02'
  changelogEntry:
    type: fix
    fixed:
      - Generated READMEs now reference RequestOptions as TypedDicts correctly.
- generatorId: python-sdk
  irVersion: 53
  version: 3.3.0-rc1
  createdAt: '2024-08-01'
  changelogEntry:
    type: fix
    fixed:
      - TypedDict snippets now include literals where available.
- generatorId: python-sdk
  irVersion: 53
  version: 3.3.0-rc0
  createdAt: '2024-07-31'
  changelogEntry:
    type: chore
    changed:
      - 'internal: Upgrade to IR 53.1.0'
      - >-
        chore: The Python generator now creates snippet templates for
        undiscriminated unions.
- generatorId: python-sdk
  irVersion: 49
  version: 3.2.0-rc1
  createdAt: '2024-07-29'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generated README now imports `ApiError` as if it were from outside
        the module.
- generatorId: python-sdk
  irVersion: 49
  version: 3.2.0-rc0
  createdAt: '2024-07-25'
  changelogEntry:
    type: feat
    added:
      - >-
        The Python SDK can now be generated such that inputs to requests are
        TypedDicts, instead of Pydantic models. This allows for consumers of the
        SDK to continue to have type hinting and autocomplete, but not need to
        import new object types when creating requests.
- generatorId: python-sdk
  irVersion: 49
  version: 3.1.0-rc0
  createdAt: '2024-07-24'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The root client users interact with is now exported from
        the main `__init__.py`, this allows users to access the client via `from
        my_sdk import my_sdk_client` as opposed to `from my_sdk.client import
        my_sdk_client`.
    removed:
      - >-
        Note this comes with an edge-case break. In the unlikely event you have
        a type that conflicts in naming with the exported root client, that type
        model is post-fixed with "Model". e.g. a type `Merge` in an SDK
        exporting a client `Merge` becomes `MergeModel`.
- generatorId: python-sdk
  irVersion: 49
  version: 3.0.0-rc2
  createdAt: '2024-07-24'
  changelogEntry:
    type: fix
    fixed:
      - >-
        `update_forward_refs` no longer raises errors, preserving original
        behavior, pre-3.x.
- generatorId: python-sdk
  irVersion: 49
  version: 3.0.0-rc1
  createdAt: '2024-07-23'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Sometimes mypy will error on the typing of `expected_types` within our
        test suite, despite them being labeled as `typing.Any`. This updates the
        types for tuples to `typing.Tuple[tying.Any, typing.Any]` to appease
        mypy.
- generatorId: python-sdk
  irVersion: 49
  version: 3.0.0-rc0
  createdAt: '2024-07-23'
  changelogEntry:
    type: chore
    removed:
      - >-
        Break: The generated SDK now supports Pydantic V2 outright, it no longer
        uses `pydantic.v1` models. This change introduces additional breaks:
      - Wrapped aliases have been removed
      - >-
        Custom root validators for models with a **root** type have been removed
        (e.g. only unions with utils still leverages root models)
      - >-
        Public fields previously prefixed with `_` are now prefixed with `f_`
        (Pydantic V2 does not allow for `_` prefixes on public fields and Python
        does not allow for a numeric prefix)
- generatorId: python-sdk
  irVersion: 49
  version: 2.16.0
  createdAt: '2024-07-16'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The generated SDK now allows for specifying whether or not
        to generate `streaming` functions as overloaded functions or suparate
        functions.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.6
  createdAt: '2024-07-17'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generated python SDK now requires an environment be specified if a
        default is not provided.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.5
  createdAt: '2024-07-17'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generated python SDK Oauth client now no longer checks for an expiry
        when getting the access token if an expiry field is not configured.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.4
  createdAt: '2024-07-10'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generated python SDK now serializes bytes within JSON as a utf-8
        encoded string.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.3
  createdAt: '2024-07-10'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generated python SDK no longer runs into a recursion error during
        snippet generation.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.2
  createdAt: '2024-07-10'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generated python SDK no longer treats `set` as a reserved word for
        method names.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.1
  createdAt: '2024-07-09'
  changelogEntry:
    type: fix
    fixed:
      - The unchecked base model no longer coerces None to a type.
      - >-
        The http client appropriately defaults empty fields within
        RequestOptions.
- generatorId: python-sdk
  irVersion: 49
  version: 2.15.0
  createdAt: '2024-07-03'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The generated Python SDK can now respect configured
        defaults from the API spec.
- generatorId: python-sdk
  irVersion: 49
  version: 2.14.1
  createdAt: '2024-07-01'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Sync and AsyncPage now pass through the generic type to BasePage,
        allowing the use of `.items`, etc. to be appropriately typed within your
        type checking system.
- generatorId: python-sdk
  irVersion: 49
  version: 2.14.0
  createdAt: '2024-07-01'
  changelogEntry:
    type: fix
    fixed:
      - >-
        offset page now allows for the usage of 0 as a page start, previously
        the use of `page or 1` made Python coerce booleans and become 1,
        ignoring the user-provided 0.
- generatorId: python-sdk
  irVersion: 49
  version: 2.14.0-rc3
  createdAt: '2024-07-01'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Generated readmes now include an "advanced" section,
        outlining usage of retries, timeouts, error handling and usage of a
        custom client.
- generatorId: python-sdk
  irVersion: 49
  version: 2.14.0-rc2
  createdAt: '2024-07-01'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Async snippets now run the async function leveraging
        asyncio.run to be more copy-pastable.
- generatorId: python-sdk
  irVersion: 49
  version: 2.14.0-rc1
  createdAt: '2024-06-27'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the fix from 2.5.2 is now case-insentitive Recap of 2.5.2: `Fix: Support
        `list`SDK method names instead of defaulting to`list\_`.`
- generatorId: python-sdk
  irVersion: 49
  version: 2.14.0-rc0
  createdAt: '2024-06-26'
  changelogEntry:
    type: feat
    added:
      - >-
        the Python SDK now generates an accompanying SDK reference
        (`reference.md`) for users to review the SDK methods at a glance within
        the SDK's GitHub repository.
- generatorId: python-sdk
  irVersion: 49
  version: 2.13.1-rc0
  createdAt: '2024-06-20'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the Python SDK now does not send additional properties via JSON or data
        if the request is leveraging the other field.
    changed:
      - >-
        Improvement: the Python SDK now copies unit tests over to the generated
        SDK for additional unit testing (separate from wire-format testing).
- generatorId: python-sdk
  irVersion: 49
  version: 2.13.0-rc0
  createdAt: '2024-06-20'
  changelogEntry:
    type: chore
    changed:
      - 'Upgrade: The Python SDK generator is now upgraded to IR V49.'
- generatorId: python-sdk
  irVersion: 49
  version: 2.12.0-rc0
  createdAt: '2024-06-25'
  changelogEntry:
    type: feat
    added:
      - >-
        Feature: README generation now supports a section dedicated to streaming
        usage, as well as one for paginated endpoints.
    changed:
      - 'Improvement: Paginated endpoint snippets now show using an iterator:'
- generatorId: python-sdk
  irVersion: 49
  version: 2.11.0-rc0
  createdAt: '2024-06-25'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The SDK now produces templates for the root clients within
        snippet-template.json. This allows users of the Templates API to pass in
        data for the auth variables present within the root client.
- generatorId: python-sdk
  irVersion: 46
  version: 2.10.2
  createdAt: '2024-06-20'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The SDK now handles stream termination sequences like `[DONE]`. This is
        a typical way for LLM providers to communicate when the stream has
        ended.
- generatorId: python-sdk
  irVersion: 46
  version: 2.10.1
  createdAt: '2024-06-20'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Improve the SDK to not leak `JSONDecodeError` to SDK users. Instead, an
        `ApiError` will be thrown with the text content of the response.
- generatorId: python-sdk
  irVersion: 46
  version: 2.10.0
  createdAt: '2024-06-20'
  changelogEntry:
    type: feat
    added:
      - 'Feature: Add support for higher quality `README.md` generation.'
- generatorId: python-sdk
  irVersion: 46
  version: 2.9.10
  createdAt: '2024-06-20'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the generator now only specifies the readme location within
        pyproject.toml if one was successfully created.
- generatorId: python-sdk
  irVersion: 46
  version: 2.9.9
  createdAt: '2024-06-19'
  changelogEntry:
    type: chore
    changed:
      - 'Internal: The generator now consumes IRv46.'
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.8
  createdAt: '2024-06-18'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The python generator only adds a publish step in github actions if
        credentials are specified.
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.7
  createdAt: '2024-06-12'
  changelogEntry:
    type: fix
    fixed:
      - The unchecked base model stops special casing defaults and pydantic v2.
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.6
  createdAt: '2024-06-11'
  changelogEntry:
    type: fix
    fixed:
      - Offset based pagination is now 1-based, as opposed to 0 based
      - >-
        The HTTP client now passes in additional body properties from the
        request options, even if the body is empty (regression from the client
        migration in 2.8.0)
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.5
  createdAt: '2024-06-10'
  changelogEntry:
    type: fix
    fixed:
      - Unions with elements that specify no properties are generated correctly.
      - >-
        Unions with a single type now have a valid type alias (rather than an
        invalid `typing.Union`).
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.4
  createdAt: '2024-06-07'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The unchecked base model now handles pulling the discriminant from a
        dict, not just a model/object.
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.3
  createdAt: '2024-06-06'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Snippet templates for discrminated unions now specify the
        `template_input` property which is required to actually see snippets of
        instantiating discrminated unions.
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.2
  createdAt: '2024-06-06'
  changelogEntry:
    type: fix
    fixed:
      - >-
        downgrades mypy so we can run it over all our files without concern for
        their pydantic bug
      - adds typehint to the response variable
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.1
  createdAt: '2024-06-06'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The SDK removes unset query parameters from requests (regression from
        the client migration in 2.8.0)
      - >-
        The SDK fixes it's type for `files` parameters to the http client
        (regression from the client migration in 2.8.0)
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.0
  createdAt: '2024-06-05'
  changelogEntry:
    type: fix
    fixed:
      - Snippets preserve trailing slashes
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.0-rc1
  createdAt: '2024-06-05'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The new http client abstraction ensures a slash is postfixed to the
        baseurl
      - Snippets preserve trailing slashes
- generatorId: python-sdk
  irVersion: 39
  version: 2.9.0-rc0
  createdAt: '2024-06-04'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The Python generator now runs custom unit tests in CI if
        configured.
- generatorId: python-sdk
  irVersion: 39
  version: 2.8.2
  createdAt: '2024-06-04'
  changelogEntry:
    type: fix
    fixed:
      - The none-filtering function now supports mypy's invariance check.
- generatorId: python-sdk
  irVersion: 39
  version: 2.8.1
  createdAt: '2024-06-04'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The parameter comment/documentation for timeouts on the root client now
        reflects the custom timeout passed through within configuration.
- generatorId: python-sdk
  irVersion: 39
  version: 2.8.0
  createdAt: '2024-06-03'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Endpoint function request logic has been abstracted into
        the request function of the wrapped httpx client.
- generatorId: python-sdk
  irVersion: 39
  version: 2.7.0
  createdAt: '2024-05-30'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The generator now outputs an `exampleId` alongside each
        generated snippet so that we can correlate snippets with the relevant
        examples. This is useful for retrieving examples from Fern's API and
        making sure that you can show multiple snippets in the generated docs.
- generatorId: python-sdk
  irVersion: 39
  version: 2.6.1
  createdAt: '2024-05-31'
  changelogEntry:
    type: fix
    fixed:
      - >-
        this adds a back door token getter function to OAuth clients to better
        test the functionality.
- generatorId: python-sdk
  irVersion: 39
  version: 2.6.0
  createdAt: '2024-05-30'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Support adding optional dependencies and extras to your
        generated `pyproject.toml`. To use this configuration, please add the
        following:
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.7
  createdAt: '2024-05-30'
  changelogEntry:
    type: fix
    fixed:
      - tests now carry a type annotation for `expected_types` variable.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.6
  createdAt: '2024-05-29'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: literal values are now all defaulted such that users are
        not required to plug in a redundant value.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.5
  createdAt: '2024-05-29'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Optional lists returned from pagination endpoints are now appropriately
        flattened such that the `Pager` return types are correctly
        `Pager[ListItem]` as opposed to `Pager[List[ListItem]]`.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.4
  createdAt: '2024-05-28'
  changelogEntry:
    type: fix
    fixed:
      - Add typing library for dateutils in testing lib to satisfy mypy errors.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.3
  createdAt: '2024-05-24'
  changelogEntry:
    type: fix
    fixed:
      - Stop specifying custom licenses manually, let poetry handle adding them.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.2
  createdAt: '2024-05-23'
  changelogEntry:
    type: fix
    fixed:
      - Support `list` SDK method names instead of defaulting to `list_`.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.1-rc0
  createdAt: '2024-05-23'
  changelogEntry:
    type: fix
    fixed:
      - Literal parameters are added back to the request body.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.0-rc2
  createdAt: '2024-05-23'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Do not attempt to run `fern test` in CI until the command is more widely
        rolled out.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.0-rc1
  createdAt: '2024-05-22'
  changelogEntry:
    type: fix
    fixed:
      - Address `propogate` -> `propagate` typo in python codegen.
- generatorId: python-sdk
  irVersion: 39
  version: 2.5.0-rc0
  createdAt: '2024-05-22'
  changelogEntry:
    type: fix
    fixed:
      - >-
        This version addresses issues in unit test generation and reenables the
        creation of unit tests.
- generatorId: python-sdk
  irVersion: 39
  version: 2.4.0-rc0
  createdAt: '2024-05-21'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The Python SDK generator now uses safe names wherever string concat is
        not used (like in client generation naming), so this will update module
        and parameter names.
- generatorId: python-sdk
  irVersion: 39
  version: 2.3.4
  createdAt: '2024-05-21'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Snippets and unit tests now correctly write optional request bodies when
        `inline_request_params` is set to `True`. Previously the generator wrote
        snippets that inlined these parameters, which does not match the
        generated SDK itself.
- generatorId: python-sdk
  irVersion: 39
  version: 2.3.3
  createdAt: '2024-05-21'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Inlined body parameters now deconflict in naming with header and query
        parameters by prefixing the request objects name.
- generatorId: python-sdk
  irVersion: 39
  version: 2.3.2
  createdAt: '2024-05-21'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The `pyproject.toml` generator now writes authors in a valid format for
        `tool.poetry`, not just `project`
      - The query encoder now correctly handles none values
- generatorId: python-sdk
  irVersion: 39
  version: 2.3.1
  createdAt: '2024-05-21'
  changelogEntry:
    type: fix
    fixed:
      - The `pyproject.toml` generator now includes project URLs when specified.
- generatorId: python-sdk
  irVersion: 39
  version: 2.3.0
  createdAt: '2024-05-21'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Users can now specify information that will appear in their
        pypi record.
- generatorId: python-sdk
  irVersion: 39
  version: 2.2.2
  createdAt: '2024-05-20'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Inline request parameters now deconflict in naming with the unnamed path
        parameter arguments. Previously, when inlining request parameters into
        the method signature, we would not deconflict naming with the unnamed
        args preceeding them. Now, conflicting unnamed parameters are post-fixed
        with an "_".
- generatorId: python-sdk
  irVersion: 39
  version: 2.2.1
  createdAt: '2024-05-17'
  changelogEntry:
    type: chore
    changed:
      - 'Internal: The generator now uses the latest FDR SDK.'
- generatorId: python-sdk
  irVersion: 39
  version: 2.2.0
  createdAt: '2024-05-16'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The generated SDK will now correctly encode deep object
        query parameters. For example, if you have an object `{"test":
        {"nested": "object"}}` as a query parameter, we will now encode it as
        `test[nested]=object`.
- generatorId: python-sdk
  irVersion: 39
  version: 2.1.1
  createdAt: '2024-05-15'
  changelogEntry:
    type: chore
    changed:
      - 'Chore: add enhanced snippet support for streaming endpoints.'
- generatorId: python-sdk
  irVersion: 39
  version: 2.1.0
  createdAt: '2024-05-14'
  changelogEntry:
    type: feat
    added:
      - 'Feature: Add support for cursor and offset pagination.'
- generatorId: python-sdk
  irVersion: 39
  version: 2.0.1
  createdAt: '2024-05-14'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the python generator previously used `exclude_unset` on pydantic models,
        however this would remove defaulted values. This change updates this to
        only exclude none fields that were not required.
- generatorId: python-sdk
  irVersion: 39
  version: 2.0.0
  createdAt: '2024-05-09'
  changelogEntry:
    type: chore
    changed:
      - >-
        Break: the python SDK is now on major version 2, there are no
        substantial logic changes, however default configuration has changed. To
        take this upgrade without any breaks, please add the below configuration
        to your `generators.yml` file:
- generatorId: python-sdk
  irVersion: 39
  version: 1.7.0-rc0
  createdAt: '2024-05-09'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: you can now declare a new python version range for your
        `pyproject.toml`, which will declare a new version range for your pip
        package.
- generatorId: python-sdk
  irVersion: 39
  version: 1.6.0-rc0
  createdAt: '2024-05-09'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: you can now specify dev dependencies from your
        `generators.yml` file:
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.3-rc0
  createdAt: '2024-05-02'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the unchecked basemodel no longer tries to dereference an object if it's
        null.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.2-rc0
  createdAt: '2024-05-02'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: The python generator now produces sync snippet templates,
        as opposed to just async templates as it was before
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.1-rc5
  createdAt: '2024-05-01'
  changelogEntry:
    type: fix
    fixed:
      - Snippet templates now generate the correct imports for object types.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.1-rc4
  createdAt: '2024-05-01'
  changelogEntry:
    type: fix
    fixed:
      - The SDK now generates discriminated union snippet templates correctly.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.1-rc3
  createdAt: '2024-05-01'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Union types leverage the fern aware base model to include
        JSON and Dict function overrides.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.1-rc2
  createdAt: '2024-05-01'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The vanilla pydantic base model now respects the
        `require_optional_fields`, this became a regression in 1.5.1-rc0 when we
        started to inline union properties which leverages the vanilla base
        model.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.1-rc1
  createdAt: '2024-05-01'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Address formatting issues with snippet templates, we now strip newlines
        off OG snippets as well as plumb through indentation metadata to places
        that were previously missing it.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.1-rc0
  createdAt: '2024-04-26'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Discriminated union variants that are objects now have inlined
        properties instead of extending a base type.
- generatorId: python-sdk
  irVersion: 39
  version: 1.5.0-rc0
  createdAt: '2024-04-30'
  changelogEntry:
    type: feat
    added:
      - >-
        The generator now supports inlining top-level request parameters instead
        of requiring users create a request object.
- generatorId: python-sdk
  irVersion: 39
  version: 1.4.0
  createdAt: '2024-04-29'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: keyword arguments are now ordered such that required params
        are ordered before optional params. Note that since these are kwargs,
        this is a non-breaking change.
      - 'Improvement: docstrings now match numpydoc/PEP257 format'
- generatorId: python-sdk
  irVersion: 39
  version: 1.4.0-rc3
  createdAt: '2024-04-24'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Set `mypy` dev depenency in generated `pyproject.toml` to `1.9.0`. This
        prevents upstream `mypy` bugs from affecting user builds. Note that this
        is only a dev dependency, so it does not affect the behavior of the SDK.
      - Temporarily disable unit test generation.
    changed:
      - 'Improvement: Use named parameters for all `httpx` request params.'
- generatorId: python-sdk
  irVersion: 39
  version: 1.4.0-rc2
  createdAt: '2024-04-23'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Initialize the OAuth token provider member variables to their default
        values before they are set.
- generatorId: python-sdk
  irVersion: 39
  version: 1.4.0-rc1
  createdAt: '2024-04-22'
  changelogEntry:
    type: feat
    added:
      - >-
        The python SDK generator now supports OAuth client generation for the
        client-credentials flow.
- generatorId: python-sdk
  irVersion: 38
  version: 1.4.0-rc0
  createdAt: '2024-04-22'
  changelogEntry:
    type: chore
    changed:
      - >-
        Chore: default generated clients to follow redirects by default, this
        effectively flips the `follow_redirects_by_default` flag to `True` and
        can be reverted with the following configuration:
- generatorId: python-sdk
  irVersion: 38
  version: 1.3.1-rc0
  createdAt: '2024-04-22'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the python SDK generator now checks to make sure a header is not null
        before casting it to a string.
- generatorId: python-sdk
  irVersion: 38
  version: 1.3.0-rc1
  createdAt: '2024-04-22'
  changelogEntry:
    type: chore
    changed:
      - 'Internal: add logging for python snippet template generation.'
- generatorId: python-sdk
  irVersion: 38
  version: 1.3.0-rc0
  createdAt: '2024-04-21'
  changelogEntry:
    type: feat
    added:
      - >-
        Beta, feature: The generator now registers snippet templates which can
        be used for dynamic SDK code snippet generation.
- generatorId: python-sdk
  irVersion: 38
  version: 1.2.0-rc2
  createdAt: '2024-04-10'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generator now correctly imports `json` when deserializing server
        sent events.
- generatorId: python-sdk
  irVersion: 38
  version: 1.2.0-rc0
  createdAt: '2024-04-10'
  changelogEntry:
    type: feat
    added:
      - >-
        The generator now depends on v38 of Intermediate Representation which
        requires the latest CLI. As part of this, the generator now supports
        server sent events using `httpx-sse`.
- generatorId: python-sdk
  irVersion: 37
  version: 1.1.0-rc3
  createdAt: '2024-04-04'
  changelogEntry:
    type: fix
    fixed:
      - >-
        There are a number of fixes to the skip validation code as well as tests
        to reflect those updates.
- generatorId: python-sdk
  irVersion: 37
  version: 1.1.0-rc2
  createdAt: '2024-04-04'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generator now writes the skipped-validation `cast` with a suffixing
        new line so that the code compiles.
- generatorId: python-sdk
  irVersion: 37
  version: 1.1.0-rc1
  createdAt: '2024-04-04'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The generator no longer attempts to create a version file if Fern does
        not own generating the full package (e.g. in local generation). It's too
        confusing for to make the relevant changes to the package set up, and is
        also arguably not even needed in local generation.
- generatorId: python-sdk
  irVersion: 37
  version: 1.1.0-rc0
  createdAt: '2024-04-03'
  changelogEntry:
    type: feat
    added:
      - >-
        [EXPERIMENTAL] Feature: The python SDK now includes a configuration
        option to skip pydantic validation. This ensures that Pydantic does not
        immediately fail if the model being returned from an API does not
        exactly match the Pydantic model. This is meant to add flexibility,
        should your SDK fall behind your API, but should be used sparringly, as
        the type-hinting for users will still reflect the Pydantic model
        exactly.
- generatorId: python-sdk
  irVersion: 37
  version: 1.0.1
  createdAt: '2024-04-03'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Pydantic introduced a "break" to their 1.x libs by adding in a .v1
        submodule that does not mirror the one that comes with pydantic v2. To
        get around this we now force the usage of the v1 submodule only if the
        pydantic version is v2.
- generatorId: python-sdk
  irVersion: 37
  version: 1.0.0
  createdAt: '2024-04-02'
  changelogEntry:
    type: chore
    changed:
      - >-
        Break: The python SDK now defaults new (breaking configuration) to
        introduce general improvements.
      - >-
        Improvement: The python SDK now supports specifying whether or not to
        follow redirects in requests by default, and exposes an option to
        override that functionality for consumers.
- generatorId: python-sdk
  irVersion: 37
  version: 0.13.4
  createdAt: '2024-04-03'
  changelogEntry:
    type: fix
    fixed:
      - >-
        revert the change from 0.13.2, the stream call returns a context
        manager, which is not awaited. The issue that this was meant to solve
        was actually fixed in version `0.12.2`.
- generatorId: python-sdk
  irVersion: 37
  version: 0.13.3
  createdAt: '2024-03-28'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Github workflows for publishing now work again (previously the trigger
        was incorrect).
- generatorId: python-sdk
  irVersion: 37
  version: 0.13.2
  createdAt: '2024-03-28'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Asynchronous calls to `httpx.stream` are now awaited. This is applicable
        to any file download or JSON streaming (chat completion) endpoints.
- generatorId: python-sdk
  irVersion: 37
  version: 0.13.1
  createdAt: '2024-03-26'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: discriminant values in unions are now defaulted such that
        callers no longer need to specify the discriminant:
- generatorId: python-sdk
  irVersion: 37
  version: 0.13.0
  createdAt: '2024-03-25'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: the python SDK now exposes it's version through
        `__version__` to match module standards and expectations.
- generatorId: python-sdk
  irVersion: 37
  version: 0.12.5
  createdAt: '2024-03-22'
  changelogEntry:
    type: fix
    fixed:
      - >-
        the python SDK uses the timeout provided to the top level client as the
        default per-request, previously if there was no timeout override in the
        RequestOptions, we'd default to 60s, even if a timeout was provided at
        the client level.
- generatorId: python-sdk
  irVersion: 37
  version: 0.12.4
  createdAt: '2024-03-19'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Allow full forward compat with enums while keeping
        intellisense by unioning enum literals with `typing.AnyStr`.
- generatorId: python-sdk
  irVersion: 37
  version: 0.12.3
  createdAt: '2024-03-18'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Allow bytes requests to take in iterators of bytes,
        mirroring the types allowed by HTTPX.
- generatorId: python-sdk
  irVersion: 37
  version: 0.12.2
  createdAt: '2024-03-18'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Fix the returned type and value contained within the retrying wrapper
        for the HTTPX client (http_client.py).
- generatorId: python-sdk
  irVersion: 37
  version: 0.12.1
  createdAt: '2024-03-14'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improves example generation and snippets for union types, as well as
        multi-url environments.
    fixed:
      - >-
        Stringifies header arguments, HTTPX was previously hard failing for
        certain types
- generatorId: python-sdk
  irVersion: 37
  version: 0.12.0
  createdAt: '2024-03-11'
  changelogEntry:
    type: feat
    added:
      - >-
        Beta, feature: The SDK now generates tests leveraging auto-generated
        data to test typing, as well as wire-formatting (e.g. the SDKs are
        sending and receiving data as expected). This comes out of the box
        within the generated github workflow, as well as through the fern cli:
        `fern test --command "your test command"`.
- generatorId: python-sdk
  irVersion: 36
  version: 0.11.10
  createdAt: '2024-03-08'
  changelogEntry:
    type: feat
    added:
      - >-
        feature: Expose a feature flag to pass through additional properties not
        specified within your pydantic model from your SDK. This allows for
        easier forward compatibility should your SDK drift behind your spec.
- generatorId: python-sdk
  irVersion: 36
  version: 0.11.9
  createdAt: '2024-03-04'
  changelogEntry:
    type: chore
    changed:
      - >-
        chore: Use docstrings instead of Pydantic field descriptions. This is
        meant to be a cleanliness change.
- generatorId: python-sdk
  irVersion: 36
  version: 0.11.8-rc1
  createdAt: '2024-03-02'
  changelogEntry:
    type: chore
    changed:
      - >-
        Beta, Improvement: Introduces a `max_retries` parameter to the
        RequestOptions dict accepted by all requests. This parameter will retry
        requests automatically, with exponential backoff and a jitter. The
        client will automatically retry requests of a 5XX status code, or
        certain 4XX codes (429, 408, 409).
- generatorId: python-sdk
  irVersion: 36
  version: 0.11.8-rc0
  createdAt: '2024-02-27'
  changelogEntry:
    type: chore
    changed:
      - >-
        Beta: Introduce a `client` custom config that allows you to specify
        class_name and filename for the client. This configuration can be used
        in several ways:
- generatorId: python-sdk
  irVersion: 36
  version: 0.11.7
  createdAt: '2024-02-27'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Introduces a flag `use_str_enums` to swap from using proper
        Enum classes to using Literals to represent enums. This change allows
        for forward compatibility of enums, since the user will receive the
        string back.
- generatorId: python-sdk
  irVersion: 36
  version: 0.11.6
  createdAt: '2024-02-26'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: You can now specify envvars to scan for headers, not just
        auth scheme headers.
- generatorId: python-sdk
  irVersion: 34
  version: 0.11.5
  createdAt: '2024-02-23'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Fix the usage of ApiError when leveraging auth envvars, when the schema
        for ApiError was changed, this usage was missed in the update.
- generatorId: python-sdk
  irVersion: 34
  version: 0.11.4
  createdAt: '2024-02-23'
  changelogEntry:
    type: fix
    fixed:
      - We now grab enum values appropriately when enums are within unions.
- generatorId: python-sdk
  irVersion: 34
  version: 0.11.3
  createdAt: '2024-02-22'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Transition from lists to sequences within function calls, this is a fix
        as a result of how mypy handles type variance. This fix is only for
        function calls as testing shows that we do not hit the same issue within
        mypy with list[union[*]] fields on pydantic objects.
    changed:
      - >-
        Improvement: The Python SDK generator now defaults to
        `require_optional_fields = False`. This means that any requests that
        have optional fields no longer require a user to input data (or a `None`
        value) in.
- generatorId: python-sdk
  irVersion: 34
  version: 0.11.2
  createdAt: '2024-02-21'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement (Beta): The Python generator now supports a configuration
        option called `improved_imports`.
- generatorId: python-sdk
  irVersion: 34
  version: 0.11.1
  createdAt: '2024-02-20'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Python now supports specifying files to auto-export from
        the root `__init__.py` file, this means you can export custom classes
        and functions from your package for users to access like so:
      - 'Chore: Add a docstring for base clients to explain usage, example:'
- generatorId: python-sdk
  irVersion: 34
  version: 0.11.0
  createdAt: '2024-02-19'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Python now supports a wider range of types for file upload,
        mirroring the `httpx` library used under the hood, these are grouped
        under a new type `File`:
    fixed:
      - >-
        Python now supports API specifications that leverage lists for file
        upload. Previously, Fern incorrectly made all `list<file>` type requests
        simply `file`.
- generatorId: python-sdk
  irVersion: 31
  version: 0.10.3
  createdAt: '2024-02-19'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Several bugfixes were made to related to literal properties. If a
        literal is used as a query parameeter, header, path parameter, or
        request parameter, the user no longer has to explicitly pass it in.
- generatorId: python-sdk
  irVersion: 31
  version: 0.10.2
  createdAt: '2024-02-18'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The SDK always sends the enum wire value instead of the name of the
        enum.
      - >-
        Revert #2719 which introduced additional issues with circular references
        within our Python types.
- generatorId: python-sdk
  irVersion: 31
  version: 0.10.1
  createdAt: '2024-02-14'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Add support for a RequestOptions object for each generated
        function within Python SDKs. This parameter is an optional final
        parameter that allows for configuring timeout, as well as pass in
        arbitrary data through to the request. RequestOptions is a TypedDict,
        with optional fields, so there's no need to instantiate an object, just
        pass in the relevant keys within a dict!
- generatorId: python-sdk
  irVersion: 31
  version: 0.10.0
  createdAt: '2024-02-13'
  changelogEntry:
    type: chore
    changed:
      - >-
        Improvement: Remove support for Python 3.7. In order to support newer
        versions of libraries we depend on (such as typing and
        typing-extensions), we must move on to Python 3.8. With this change we
        are also able to:
    removed:
      - >-
        Remove the `backports` dependency, as `cached_property` is now included
        within `functools`
      - >-
        Remove the upper bound dependency on Pydantic which had dropped support
        for Python 3.7
- generatorId: python-sdk
  irVersion: 31
  version: 0.9.1
  createdAt: '2024-02-11'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Remove literals from SDK function signatures, as they are not modifiable
        for end users.
      - >-
        Acknowledge the optionality of a `File` property, previously we were
        requiring all `File` type inputs, even if they were specified as
        optional within the OpenAPI or Fern definition. Now, we check if the
        parameter is required and make the parameter optional if it is not.
- generatorId: python-sdk
  irVersion: 31
  version: 0.9.0
  createdAt: '2024-02-11'
  changelogEntry:
    type: feat
    added:
      - >-
        The SDK generator now supports whitelabelling. When this is turned on,
        there will be no mention of Fern in the generated code.
- generatorId: python-sdk
  irVersion: 31
  version: 0.8.3-rc0
  createdAt: '2024-01-29'
  changelogEntry:
    type: fix
    fixed:
      - >-
        Increase recursion depth to allow for highly nested and complex
        examples, this is a temporary solution while the example datamodel is
        further refined.
- generatorId: python-sdk
  irVersion: 31
  version: 0.8.2-rc0
  createdAt: '2024-01-28'
  changelogEntry:
    type: fix
    fixed:
      - >-
        The Python SDK better handles cyclical references. In particular,
        cyclical references are tracked for undiscriminated unions, and
        update_forward_refs is always called with object references.
- generatorId: python-sdk
  irVersion: 31
  version: 0.8.1
  createdAt: '2024-01-26'
  changelogEntry:
    type: feat
    added:
      - >-
        If the auth scheme has environment variables specified, the generated
        python client will scan those environment variables.
- generatorId: python-sdk
  irVersion: 31
  version: 0.8.0
  createdAt: '2024-01-25'
  changelogEntry:
    type: fix
    fixed:
      - Enums in inlined requests send the appropriate value.
- generatorId: python-sdk
  irVersion: 31
  version: 0.7.7
  createdAt: '2024-01-21'
  changelogEntry:
    type: chore
    changed:
      - 'Chore: Intialize this changelog'
