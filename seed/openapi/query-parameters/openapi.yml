openapi: 3.0.1
info:
  title: query-parameters
  version: ''
paths:
  /user:
    get:
      operationId: user_getUsername
      tags:
        - User
      parameters:
        - name: limit
          in: query
          required: true
          schema:
            type: integer
          examples:
            Example1:
              value: 42
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
          examples:
            Example1:
              value: d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
          examples:
            Example1:
              value: '2024-01-01'
        - name: deadline
          in: query
          required: true
          schema:
            type: string
            format: date-time
          examples:
            Example1:
              value: '2024-01-01T00:00:00Z'
        - name: bytes
          in: query
          required: true
          schema:
            type: string
            format: byte
          examples:
            Example1:
              value: SGVsbG8gV29ybGQ=
        - name: optionalString
          in: query
          required: false
          schema:
            type: string
            nullable: true
          examples:
            Example1:
              value: string
        - name: filter
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
          examples:
            Example1:
              value: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Example1:
                  value: {}
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        name:
          type: string
          example: string
        tags:
          type: array
          items:
            type: string
          example:
            - string
      required:
        - name
        - tags
    NestedUser:
      title: NestedUser
      type: object
      properties:
        name:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - name
        - user
  securitySchemes: {}
