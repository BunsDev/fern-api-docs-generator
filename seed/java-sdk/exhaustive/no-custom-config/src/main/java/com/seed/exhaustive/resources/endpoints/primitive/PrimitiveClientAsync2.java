/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.exhaustive.resources.endpoints.primitive;

import com.seed.exhaustive.core.ClientOptions;
import com.seed.exhaustive.core.RequestOptions;
import java.time.OffsetDateTime;
import java.util.UUID;
import java.util.concurrent.CompletableFuture;

public class PrimitiveClientAsync2 {
    protected final ClientOptions clientOptions;
    protected final PrimitiveClient blockingClient;

    public PrimitiveClientAsync2(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.blockingClient = new PrimitiveClient(clientOptions);
    }

    public CompletableFuture<String> getAndReturnString(String request) {
        return getAndReturnString(request, null);
    }

    public CompletableFuture<String> getAndReturnString(String request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnString(request, requestOptions));
    }

    public CompletableFuture<Integer> getAndReturnInt(int request) {
        return getAndReturnInt(request, null);
    }

    public CompletableFuture<Integer> getAndReturnInt(int request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnInt(request, requestOptions));
    }

    public CompletableFuture<Long> getAndReturnLong(long request) {
        return getAndReturnLong(request, null);
    }

    public CompletableFuture<Long> getAndReturnLong(long request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnLong(request, requestOptions));
    }

    public CompletableFuture<Double> getAndReturnDouble(double request) {
        return getAndReturnDouble(request, null);
    }

    public CompletableFuture<Double> getAndReturnDouble(double request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnDouble(request, requestOptions));
    }

    public CompletableFuture<Boolean> getAndReturnBool(boolean request) {
        return getAndReturnBool(request, null);
    }

    public CompletableFuture<Boolean> getAndReturnBool(boolean request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnBool(request, requestOptions));
    }

    public CompletableFuture<OffsetDateTime> getAndReturnDatetime(OffsetDateTime request) {
        return getAndReturnDatetime(request, null);
    }

    public CompletableFuture<OffsetDateTime> getAndReturnDatetime(
            OffsetDateTime request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnDatetime(request, requestOptions));
    }

    public CompletableFuture<String> getAndReturnDate(String request) {
        return getAndReturnDate(request, null);
    }

    public CompletableFuture<String> getAndReturnDate(String request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnDate(request, requestOptions));
    }

    public CompletableFuture<UUID> getAndReturnUuid(UUID request) {
        return getAndReturnUuid(request, null);
    }

    public CompletableFuture<UUID> getAndReturnUuid(UUID request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnUuid(request, requestOptions));
    }

    public CompletableFuture<byte[]> getAndReturnBase64(byte[] request) {
        return getAndReturnBase64(request, null);
    }

    public CompletableFuture<byte[]> getAndReturnBase64(byte[] request, RequestOptions requestOptions) {
        return CompletableFuture.supplyAsync(() -> this.blockingClient.getAndReturnBase64(request, requestOptions));
    }
}
