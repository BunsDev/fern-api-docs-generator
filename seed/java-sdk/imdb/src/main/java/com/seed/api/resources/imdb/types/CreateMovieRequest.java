/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api.resources.imdb.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = CreateMovieRequest.Builder.class)
public final class CreateMovieRequest {
    private final String movieTitle;

    private final double movieRating;

    private final Map<String, Object> additionalProperties;

    private CreateMovieRequest(String movieTitle, double movieRating, Map<String, Object> additionalProperties) {
        this.movieTitle = movieTitle;
        this.movieRating = movieRating;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("movie_title")
    public String getMovieTitle() {
        return movieTitle;
    }

    @JsonProperty("movie_rating")
    public double getMovieRating() {
        return movieRating;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateMovieRequest && equalTo((CreateMovieRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateMovieRequest other) {
        return movieTitle.equals(other.movieTitle) && movieRating == other.movieRating;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.movieTitle, this.movieRating);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MovieTitleStage builder() {
        return new Builder();
    }

    public interface MovieTitleStage {
        MovieRatingStage movieTitle(String movieTitle);

        Builder from(CreateMovieRequest other);
    }

    public interface MovieRatingStage {
        _FinalStage movieRating(double movieRating);
    }

    public interface _FinalStage {
        CreateMovieRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MovieTitleStage, MovieRatingStage, _FinalStage {
        private String movieTitle;

        private double movieRating;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateMovieRequest other) {
            movieTitle(other.getMovieTitle());
            movieRating(other.getMovieRating());
            return this;
        }

        @java.lang.Override
        @JsonSetter("movie_title")
        public MovieRatingStage movieTitle(String movieTitle) {
            this.movieTitle = movieTitle;
            return this;
        }

        @java.lang.Override
        @JsonSetter("movie_rating")
        public _FinalStage movieRating(double movieRating) {
            this.movieRating = movieRating;
            return this;
        }

        @java.lang.Override
        public CreateMovieRequest build() {
            return new CreateMovieRequest(movieTitle, movieRating, additionalProperties);
        }
    }
}
