/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.seed.api.resources.imdb.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.seed.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = Movie.Builder.class)
public final class Movie {
    private final String id;

    private final String movieTitle;

    private final double movieRating;

    private final Map<String, Object> additionalProperties;

    private Movie(String id, String movieTitle, double movieRating, Map<String, Object> additionalProperties) {
        this.id = id;
        this.movieTitle = movieTitle;
        this.movieRating = movieRating;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("_id")
    public String getId() {
        return id;
    }

    @JsonProperty("movie_title")
    public String getMovieTitle() {
        return movieTitle;
    }

    /**
     * @return The rating scale is one to five stars
     */
    @JsonProperty("movie_rating")
    public double getMovieRating() {
        return movieRating;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof Movie && equalTo((Movie) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(Movie other) {
        return id.equals(other.id) && movieTitle.equals(other.movieTitle) && movieRating == other.movieRating;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.movieTitle, this.movieRating);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        MovieTitleStage id(String id);

        Builder from(Movie other);
    }

    public interface MovieTitleStage {
        MovieRatingStage movieTitle(String movieTitle);
    }

    public interface MovieRatingStage {
        _FinalStage movieRating(double movieRating);
    }

    public interface _FinalStage {
        Movie build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, MovieTitleStage, MovieRatingStage, _FinalStage {
        private String id;

        private String movieTitle;

        private double movieRating;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(Movie other) {
            id(other.getId());
            movieTitle(other.getMovieTitle());
            movieRating(other.getMovieRating());
            return this;
        }

        @java.lang.Override
        @JsonSetter("_id")
        public MovieTitleStage id(String id) {
            this.id = id;
            return this;
        }

        @java.lang.Override
        @JsonSetter("movie_title")
        public MovieRatingStage movieTitle(String movieTitle) {
            this.movieTitle = movieTitle;
            return this;
        }

        /**
         * <p>The rating scale is one to five stars</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("movie_rating")
        public _FinalStage movieRating(double movieRating) {
            this.movieRating = movieRating;
            return this;
        }

        @java.lang.Override
        public Movie build() {
            return new Movie(id, movieTitle, movieRating, additionalProperties);
        }
    }
}
