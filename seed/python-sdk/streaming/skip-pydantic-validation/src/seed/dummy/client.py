# This file was auto-generated by Fern from our API Definition.

import typing
from ..core.request_options import RequestOptions
from .types.stream_response import StreamResponse
from .raw_client import RawDummyClient, AsyncRawDummyClient


class DummyClient:
    def __init__(self, *, raw_client: RawDummyClient):
        self._raw_client = raw_client

    @property
    def with_raw_response(self) -> RawDummyClient:
        """
        Get a version of this client that returns the raw responses instead of extracting the response data.

        Returns
        -------
        RawDummyClient
        """
        return self._raw_client

    def generate_stream(
        self,
        *,
        num_events: int,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> typing.Iterator[StreamResponse]:
        """
        Parameters
        ----------
        num_events : int

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Iterator[StreamResponse]
        """
        response = self._raw_client.generate_stream(
            num_events=num_events,
            request_options=request_options,
        )
        return response.data

    def generate(
        self,
        *,
        num_events: int,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> StreamResponse:
        """
        Parameters
        ----------
        num_events : int

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        StreamResponse
        """
        response = self._raw_client.generate(
            num_events=num_events,
            request_options=request_options,
        )
        return response.data


class AsyncDummyClient:
    def __init__(self, *, raw_client: AsyncRawDummyClient):
        self._raw_client = raw_client

    @property
    def with_raw_response(self) -> AsyncRawDummyClient:
        """
        Get a version of this client that returns the raw responses instead of extracting the response data.

        Returns
        -------
        AsyncRawDummyClient
        """
        return self._raw_client

    async def generate_stream(
        self,
        *,
        num_events: int,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> typing.AsyncIterator[StreamResponse]:
        """
        Parameters
        ----------
        num_events : int

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.AsyncIterator[StreamResponse]
        """
        response = await self._raw_client.generate_stream(
            num_events=num_events,
            request_options=request_options,
        )
        return response.data

    async def generate(
        self,
        *,
        num_events: int,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> StreamResponse:
        """
        Parameters
        ----------
        num_events : int

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        StreamResponse
        """
        response = await self._raw_client.generate(
            num_events=num_events,
            request_options=request_options,
        )
        return response.data
